# standardSQL
# variable_font_with_fcp
create temp function getname(font_details string) returns string language js
as '''
try {
  const metadata = RegExp('(not to be used for anything other than web font use!|web use only|web_use_only|:|;|^google$|copyright|©|(c)|rights reserved|published by|generated by|property of|trademark|version|v\\d+|release|untitled|^bold$|^light$|^semibold$|^defaults$|^normal$|^regular$|^[a-f0-9]+$|Vernon Adams|Jan Kovarik|Jan Kovarik|Mark Simonson|Paul D. Hunt|Kai Bernau|Kris Sowersby|Joshua Darden|Jos Buivenga|Yugo Kajiwara|Moslem Ebrahimi|Hadrien Boyer|Russell Benson|Ryan Martinson|Joen Asmussen|Olivier Gourvat|Hannes von Doehren|René Bieder|House Industries|GoDaddy|TypeSquare|Dalton Maag Ltd|_null_name_substitute_|^font$|Moveable Type)', 'i')
  return Object.values(JSON.parse(font_details).names).find(name => {
    name = name.trim();
    return name.length > 2 &&
      !metadata.test(name) &&
      isNaN(Number(name));
  });
} catch (e) {
  return null;
}
'''
;
select
    client,
    name,
    count(distinct page) as freq_vf,
    total_page,
    count(distinct page) / total_page as pct_vf
from
    (
        select client, page, getname(json_extract(payload, '$._font_details')) as name
        from `httparchive.almanac.requests`
        where
            date = '2021-07-01'
            and type = 'font'
            and regexp_contains(
                json_extract(payload, '$._font_details.table_sizes'), '(?i)gvar'
            )
    )
join
    (
        select _table_suffix as client, count(0) as total_page
        from `httparchive.pages.2021_07_01_*`
        group by _table_suffix
    )
    using
    (client, page)
where name is not null
group by client, name, total_page
having freq_vf > 100
order by freq_vf desc
